{
  "data": {
    "modhash": null,
    "children": [
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": true,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 1,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm68j6",
          "created_utc": 1622118208,
          "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 1,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm68j6/lego_generator_you_could_use_it_to_generate_any/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_1ffz9tjt",
          "link_flair_css_class": "intermediate-showcase",
          "selftext": "Source code: [https://github.com/uvipen/Lego-generator](https://github.com/uvipen/Lego-generator)\n\nDemo: [https://youtu.be/uz8A1pq8CAw](https://youtu.be/uz8A1pq8CAw)",
          "upvote_ratio": 1,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Source code: &lt;a href=\"https://github.com/uvipen/Lego-generator\"&gt;https://github.com/uvipen/Lego-generator&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Demo: &lt;a href=\"https://youtu.be/uz8A1pq8CAw\"&gt;https://youtu.be/uz8A1pq8CAw&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm68j6/lego_generator_you_could_use_it_to_generate_any/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Intermediate Showcase",
              "e": "text"
            }
          ],
          "link_flair_background_color": "#ea0027",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "self",
          "locked": false,
          "likes": null,
          "thumbnail": "self",
          "downs": 0,
          "created": 1622147008,
          "author": "1991viet",
          "treatment_tags": [],
          "link_flair_text_color": "light",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm68j6",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/Nhib_cvFOG3FterORdHbmDXjSMtw0fqQCZWmWRkEmxE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=bcbeffdd9398317a9431eb4f71c76ee3a1684ff1",
                    "height": 54
                  },
                  {
                    "width": 216,
                    "url": "https://external-preview.redd.it/Nhib_cvFOG3FterORdHbmDXjSMtw0fqQCZWmWRkEmxE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9279dd5dd971854bda413a4c0853b28a22861703",
                    "height": 108
                  },
                  {
                    "width": 320,
                    "url": "https://external-preview.redd.it/Nhib_cvFOG3FterORdHbmDXjSMtw0fqQCZWmWRkEmxE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=8da949f2b49527585249f205f4be5b2fde9082f7",
                    "height": 160
                  },
                  {
                    "width": 640,
                    "url": "https://external-preview.redd.it/Nhib_cvFOG3FterORdHbmDXjSMtw0fqQCZWmWRkEmxE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=af15f38c5f0f1b400668b647fe686e9d9aa907ea",
                    "height": 320
                  },
                  {
                    "width": 960,
                    "url": "https://external-preview.redd.it/Nhib_cvFOG3FterORdHbmDXjSMtw0fqQCZWmWRkEmxE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a429a546e42f5eb86f08a8ed08cefa185d24297a",
                    "height": 480
                  },
                  {
                    "width": 1080,
                    "url": "https://external-preview.redd.it/Nhib_cvFOG3FterORdHbmDXjSMtw0fqQCZWmWRkEmxE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=4116a806072847d835cc6ec56c96e4b8d0c469ca",
                    "height": 540
                  }
                ],
                "source": {
                  "width": 1200,
                  "url": "https://external-preview.redd.it/Nhib_cvFOG3FterORdHbmDXjSMtw0fqQCZWmWRkEmxE.jpg?auto=webp&amp;s=635de00552cebe58d147aa3ccdce924d3be84a7d",
                  "height": 600
                },
                "variants": {},
                "id": "Dw7o16_VPBSuNeoFyEA1hjxCQyeoi-3uTUz1WexoI0Y"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "Lego generator. You could use it to generate any lego-based images or videos",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": null,
          "secure_media_embed": {},
          "link_flair_text": "Intermediate Showcase",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": null,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": true,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 0,
          "num_comments": 5,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm5vpq",
          "created_utc": 1622116989,
          "link_flair_template_id": "0df42996-1c5e-11ea-b1a0-0e44e1c5b731",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 0,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm5vpq/hey_guys_i_need_help_on_a_lil_something/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_9042apvl",
          "link_flair_css_class": "discussion",
          "selftext": "",
          "upvote_ratio": 0.5,
          "selftext_html": null,
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm5vpq/hey_guys_i_need_help_on_a_lil_something/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Discussion",
              "e": "text"
            }
          ],
          "link_flair_background_color": "",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "locked": false,
          "likes": null,
          "thumbnail": "self",
          "downs": 0,
          "created": 1622145789,
          "author": "AKLBOYYY",
          "treatment_tags": [],
          "link_flair_text_color": "dark",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm5vpq",
          "awarders": [],
          "media_only": false,
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "Hey guys I need help on a lil something",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": null,
          "secure_media_embed": {},
          "link_flair_text": "Discussion",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": null,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": true,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 1,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm5rb1",
          "created_utc": 1622116562,
          "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 1,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm5rb1/hikaru_05b_released_now_with_highlevel_crudstyle/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_3489x",
          "link_flair_css_class": "resource",
          "selftext": "Hikaru's CRUD methods simplify your code and provide the ability to use top-level objects as context managers that can optionally roll back objects to a previous state upon failure. The release includes a number of other requested enhancements and bug fixes.\n\n[https://pypi.org/project/hikaru/](https://pypi.org/project/hikaru/)",
          "upvote_ratio": 1,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hikaru&amp;#39;s CRUD methods simplify your code and provide the ability to use top-level objects as context managers that can optionally roll back objects to a previous state upon failure. The release includes a number of other requested enhancements and bug fixes.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://pypi.org/project/hikaru/\"&gt;https://pypi.org/project/hikaru/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm5rb1/hikaru_05b_released_now_with_highlevel_crudstyle/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Resource",
              "e": "text"
            }
          ],
          "link_flair_background_color": "",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "self",
          "locked": false,
          "likes": null,
          "thumbnail": "self",
          "downs": 0,
          "created": 1622145362,
          "author": "hoover",
          "treatment_tags": [],
          "link_flair_text_color": "dark",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm5rb1",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/p3HQXQzdkmyXyJ89enL6PkgmSdstFY5z1QkzOzRNUaU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=54fdfef1cb192ed04e4ba25828970287fc1ecde9",
                    "height": 108
                  },
                  {
                    "width": 216,
                    "url": "https://external-preview.redd.it/p3HQXQzdkmyXyJ89enL6PkgmSdstFY5z1QkzOzRNUaU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=22ff535b36cf2b9412be48a21108ba34479e2ba5",
                    "height": 216
                  }
                ],
                "source": {
                  "width": 300,
                  "url": "https://external-preview.redd.it/p3HQXQzdkmyXyJ89enL6PkgmSdstFY5z1QkzOzRNUaU.jpg?auto=webp&amp;s=01b29ed2d2e90d072e1fc7295da2c1cb3797f686",
                  "height": 300
                },
                "variants": {},
                "id": "POVR4AtJHvry29k6WQQwgYhMSdLrOeYwBodMqA6lPGk"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "Hikaru 0.5b released; now with high-level CRUD-style methods for calling Kubernetes",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": null,
          "secure_media_embed": {},
          "link_flair_text": "Resource",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": null,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": {
            "oembed": {
              "description": "Managed notebooks for data scientists and researchers.",
              "provider_url": "https://deepnote.com/",
              "title": "SQLLEX Simple and Faster.",
              "type": "rich",
              "thumbnail_url": "https://storage.googleapis.com/deepnote-publishing-bucket/thumbnails/ed65eb72-8d21-4576-aabc-0897a3c40905-thumb.png",
              "version": "1.0",
              "mean_alpha": 0,
              "thumbnail_height": 150,
              "thumbnail_width": 201,
              "width": 500,
              "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;display_name=Deepnote&amp;url=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;image=https%3A%2F%2Fstorage.googleapis.com%2Fdeepnote-publishing-bucket%2Fthumbnails%2Fed65eb72-8d21-4576-aabc-0897a3c40905-thumb.png&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=deepnote\" width=\"500\" height=\"300\" scrolling=\"no\" title=\"Deepnote embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
              "provider_name": "Deepnote",
              "height": 300
            },
            "type": "deepnote.com"
          },
          "saved": false,
          "hide_score": true,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 2,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm5o2w",
          "created_utc": 1622116221,
          "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {
            "scrolling": false,
            "width": 500,
            "content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;display_name=Deepnote&amp;url=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;image=https%3A%2F%2Fstorage.googleapis.com%2Fdeepnote-publishing-bucket%2Fthumbnails%2Fed65eb72-8d21-4576-aabc-0897a3c40905-thumb.png&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=deepnote\" width=\"500\" height=\"300\" scrolling=\"no\" title=\"Deepnote embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
            "height": 300
          },
          "top_awarded_type": null,
          "domain": "deepnote.com",
          "approved_at_utc": null,
          "no_follow": false,
          "ups": 2,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm5o2w/sqllex_simple_and_faster_develop/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": false,
          "author_fullname": "t2_4gvqf4gy",
          "link_flair_css_class": "tutorial",
          "selftext": "",
          "upvote_ratio": 1,
          "selftext_html": null,
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://deepnote.com/@abid/SQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ#",
          "url_overridden_by_dest": "https://deepnote.com/@abid/SQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ#",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Tutorial",
              "e": "text"
            }
          ],
          "link_flair_background_color": "#dadada",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "link",
          "locked": false,
          "likes": null,
          "thumbnail": "https://b.thumbs.redditmedia.com/icHLq3B_Si7PgSI7cN2tdMV4p3tjLUsXoDy2N53vwaI.jpg",
          "downs": 0,
          "created": 1622145021,
          "author": "V1A0",
          "treatment_tags": [],
          "link_flair_text_color": "dark",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm5o2w",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/XOg0waOLtqSBuJ2NjtW6jiW6PgaZXEqzSngKTy8BiBA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=108bf061ef57e25f6eeb78fd3b028dde405f5822",
                    "height": 80
                  }
                ],
                "source": {
                  "width": 201,
                  "url": "https://external-preview.redd.it/XOg0waOLtqSBuJ2NjtW6jiW6PgaZXEqzSngKTy8BiBA.jpg?auto=webp&amp;s=b14c1efb3b85a9fa3e1a39caf5a8279d26209d46",
                  "height": 150
                },
                "variants": {},
                "id": "7yYClXcx-BtPxkMPJ1E3aTR0NBsKiWSyBdpSUHirv-o"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": {
            "oembed": {
              "description": "Managed notebooks for data scientists and researchers.",
              "provider_url": "https://deepnote.com/",
              "title": "SQLLEX Simple and Faster.",
              "type": "rich",
              "thumbnail_url": "https://storage.googleapis.com/deepnote-publishing-bucket/thumbnails/ed65eb72-8d21-4576-aabc-0897a3c40905-thumb.png",
              "version": "1.0",
              "mean_alpha": 0,
              "thumbnail_height": 150,
              "thumbnail_width": 201,
              "width": 500,
              "html": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;display_name=Deepnote&amp;url=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;image=https%3A%2F%2Fstorage.googleapis.com%2Fdeepnote-publishing-bucket%2Fthumbnails%2Fed65eb72-8d21-4576-aabc-0897a3c40905-thumb.png&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=deepnote\" width=\"500\" height=\"300\" scrolling=\"no\" title=\"Deepnote embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
              "provider_name": "Deepnote",
              "height": 300
            },
            "type": "deepnote.com"
          },
          "title": "SQLLEX Simple and Faster Develop",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": 140,
          "secure_media_embed": {
            "scrolling": false,
            "media_domain_url": "https://www.redditmedia.com/mediaembed/nm5o2w",
            "width": 500,
            "content": "&lt;iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;display_name=Deepnote&amp;url=https%3A%2F%2Fdeepnote.com%2F%40abid%2FSQLLEX-Simple-and-Faster-7WXrco0hRXaqvAiXo8QJBQ&amp;image=https%3A%2F%2Fstorage.googleapis.com%2Fdeepnote-publishing-bucket%2Fthumbnails%2Fed65eb72-8d21-4576-aabc-0897a3c40905-thumb.png&amp;key=ed8fa8699ce04833838e66ce79ba05f1&amp;type=text%2Fhtml&amp;schema=deepnote\" width=\"500\" height=\"300\" scrolling=\"no\" title=\"Deepnote embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"&gt;&lt;/iframe&gt;",
            "height": 300
          },
          "link_flair_text": "Tutorial",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": 104,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": true,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 0,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm51xx",
          "created_utc": 1622113871,
          "link_flair_template_id": "1678450a-cfa2-11ea-830c-0e5035839c63",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 0,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm51xx/auto_repost_from_some_subreddits_to_my_telegram/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_3n5gqqg4",
          "link_flair_css_class": "beginner-showcase",
          "selftext": "My little project (with cats and other fanny pics) .\n\nparser + telegram bot: \n\nsource: [https://github.com/PlagueEvent/RToT](https://github.com/PlagueEvent/RToT)\n\nresult in telegram: [https://t.me/lol\\_what7](https://t.me/lol_what7) \n\nThis script runs in cron.",
          "upvote_ratio": 0.5,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My little project (with cats and other fanny pics) .&lt;/p&gt;\n\n&lt;p&gt;parser + telegram bot: &lt;/p&gt;\n\n&lt;p&gt;source: &lt;a href=\"https://github.com/PlagueEvent/RToT\"&gt;https://github.com/PlagueEvent/RToT&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;result in telegram: &lt;a href=\"https://t.me/lol_what7\"&gt;https://t.me/lol_what7&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;This script runs in cron.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm51xx/auto_repost_from_some_subreddits_to_my_telegram/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Beginner Showcase",
              "e": "text"
            }
          ],
          "link_flair_background_color": "#73ad34",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "self",
          "locked": false,
          "likes": null,
          "thumbnail": "self",
          "downs": 0,
          "created": 1622142671,
          "author": "LeString",
          "treatment_tags": [],
          "link_flair_text_color": "light",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm51xx",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/yfhXEcVrjEIGcRmBwnBJV13bPDXDhEBiHJ7am5LA8LU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=05c88b73c7ad4d40a103c4ac26ea11a8ea59e797",
                    "height": 54
                  },
                  {
                    "width": 216,
                    "url": "https://external-preview.redd.it/yfhXEcVrjEIGcRmBwnBJV13bPDXDhEBiHJ7am5LA8LU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=56a5fb66c48e6fa08fb21ad2ce888f12f0ebc2c8",
                    "height": 108
                  },
                  {
                    "width": 320,
                    "url": "https://external-preview.redd.it/yfhXEcVrjEIGcRmBwnBJV13bPDXDhEBiHJ7am5LA8LU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0609496d5ab3d2220f7dae3d31fa189838923f76",
                    "height": 160
                  },
                  {
                    "width": 640,
                    "url": "https://external-preview.redd.it/yfhXEcVrjEIGcRmBwnBJV13bPDXDhEBiHJ7am5LA8LU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1a749e833bdaa8915e5702e1a6e29fd9e359c2bb",
                    "height": 320
                  },
                  {
                    "width": 960,
                    "url": "https://external-preview.redd.it/yfhXEcVrjEIGcRmBwnBJV13bPDXDhEBiHJ7am5LA8LU.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=dec25d053fcf1e6f55e8db3870d95eb40c4e20f3",
                    "height": 480
                  },
                  {
                    "width": 1080,
                    "url": "https://external-preview.redd.it/yfhXEcVrjEIGcRmBwnBJV13bPDXDhEBiHJ7am5LA8LU.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=92c6f8245ed1755997c59fe5bc44882217ec3882",
                    "height": 540
                  }
                ],
                "source": {
                  "width": 1200,
                  "url": "https://external-preview.redd.it/yfhXEcVrjEIGcRmBwnBJV13bPDXDhEBiHJ7am5LA8LU.jpg?auto=webp&amp;s=1c48f0cb2e0794fbb5fa927ad1660405a0f59237",
                  "height": 600
                },
                "variants": {},
                "id": "jodoWshQgUA2S4oZexA2AXi8JjhTe99LYScYvvkqSG0"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "Auto re-post from some subreddits to my telegram channel",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": null,
          "secure_media_embed": {},
          "link_flair_text": "Beginner Showcase",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": null,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": false,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 2,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm4v7i",
          "created_utc": 1622113182,
          "link_flair_template_id": "f9716fb2-4113-11ea-a3f1-0ef51f60f757",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "github.com",
          "approved_at_utc": null,
          "no_follow": false,
          "ups": 2,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm4v7i/lux_a_python_api_for_intelligent_visual_discovery/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": false,
          "author_fullname": "t2_4usq6",
          "link_flair_css_class": "resource",
          "selftext": "",
          "upvote_ratio": 1,
          "selftext_html": null,
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://github.com/lux-org/lux",
          "url_overridden_by_dest": "https://github.com/lux-org/lux",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Resource",
              "e": "text"
            }
          ],
          "link_flair_background_color": "",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "link",
          "locked": false,
          "likes": null,
          "thumbnail": "https://a.thumbs.redditmedia.com/9AtGZpj6KfFO--K1UZ7TB0xFQ1VkEiI1FgJjc3j_7b0.jpg",
          "downs": 0,
          "created": 1622141982,
          "author": "yaph",
          "treatment_tags": [],
          "link_flair_text_color": "dark",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm4v7i",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/nXMLq_v4wR3KpM1AbVvvH-GaRHE3L-i3wG_s4ITtMtQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7645b7aac693b7303fff14bd6cd27211bd1bb8dd",
                    "height": 54
                  },
                  {
                    "width": 216,
                    "url": "https://external-preview.redd.it/nXMLq_v4wR3KpM1AbVvvH-GaRHE3L-i3wG_s4ITtMtQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=5ee5412f38f09eba349586a9539c80982018b3d8",
                    "height": 108
                  },
                  {
                    "width": 320,
                    "url": "https://external-preview.redd.it/nXMLq_v4wR3KpM1AbVvvH-GaRHE3L-i3wG_s4ITtMtQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=e2320970a21244727c238f03517a2ce592e3e710",
                    "height": 160
                  },
                  {
                    "width": 640,
                    "url": "https://external-preview.redd.it/nXMLq_v4wR3KpM1AbVvvH-GaRHE3L-i3wG_s4ITtMtQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b6513f2d143ac5b89593bac047f08027909547a5",
                    "height": 320
                  },
                  {
                    "width": 960,
                    "url": "https://external-preview.redd.it/nXMLq_v4wR3KpM1AbVvvH-GaRHE3L-i3wG_s4ITtMtQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e794bf37051bb88044c89a825ac7e2e2a8d1adef",
                    "height": 480
                  },
                  {
                    "width": 1080,
                    "url": "https://external-preview.redd.it/nXMLq_v4wR3KpM1AbVvvH-GaRHE3L-i3wG_s4ITtMtQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=99ad1dafef4e9543ef36f4ee848095598eee2de4",
                    "height": 540
                  }
                ],
                "source": {
                  "width": 1200,
                  "url": "https://external-preview.redd.it/nXMLq_v4wR3KpM1AbVvvH-GaRHE3L-i3wG_s4ITtMtQ.jpg?auto=webp&amp;s=056b5617c4db2bbcac3f7b897c46d4623063600d",
                  "height": 600
                },
                "variants": {},
                "id": "xZITebXL_EPouT9JS_vyVlZmHOdoN8-hMAnjVAKEXG0"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "Lux - A Python API for Intelligent Visual Discovery",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": 140,
          "secure_media_embed": {},
          "link_flair_text": "Resource",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": 70,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": false,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 1,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm4v6z",
          "created_utc": 1622113180,
          "link_flair_template_id": "0ad780a0-1c5e-11ea-978c-0ee7bacb2bff",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 1,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm4v6z/new_coding_discord_community/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_bozi7sgc",
          "link_flair_css_class": "news",
          "selftext": " Hi, we are a new community trying to grow bigger, in our discord server we offer help with coding/hacking, our own bot, a friendly community and much more! [https://discord.gg/VAvsHBHgkC](https://discord.gg/VAvsHBHgkC)",
          "upvote_ratio": 0.67,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, we are a new community trying to grow bigger, in our discord server we offer help with coding/hacking, our own bot, a friendly community and much more! &lt;a href=\"https://discord.gg/VAvsHBHgkC\"&gt;https://discord.gg/VAvsHBHgkC&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm4v6z/new_coding_discord_community/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "News",
              "e": "text"
            }
          ],
          "link_flair_background_color": "",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "self",
          "locked": false,
          "likes": null,
          "thumbnail": "self",
          "downs": 0,
          "created": 1622141980,
          "author": "Radveprak",
          "treatment_tags": [],
          "link_flair_text_color": "dark",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm4v6z",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/6BMljkaLjrkD7iF4i9GiMpMebFira6DCarFkxyVyluI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2557b8e50283d2f69375ec95c9c82a17de4d6f6a",
                    "height": 108
                  }
                ],
                "source": {
                  "width": 207,
                  "url": "https://external-preview.redd.it/6BMljkaLjrkD7iF4i9GiMpMebFira6DCarFkxyVyluI.jpg?auto=webp&amp;s=3ddc42a342bcb345de96151ce7591b5ba9f45ff6",
                  "height": 207
                },
                "variants": {},
                "id": "mPbVPivK5vFYpZQNS8hFWLUfHjiYeuhfiHVf0K7nVpI"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "New coding discord community",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": null,
          "secure_media_embed": {},
          "link_flair_text": "News",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": null,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": false,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 1,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm4n0a",
          "created_utc": 1622112220,
          "link_flair_template_id": "7987a74c-04d8-11eb-84ca-0e0ac8b5a78f",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 1,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm4n0a/making_inferences_with_deeplearning_models_in/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_12ahau",
          "link_flair_css_class": "tutorial",
          "selftext": "In my new tutorial, you can learn how to make inferences with an already trained PyTorch model.\n\nThis video is part of the “PyTorch for Audio and Music Processing” series, which aims to teach you how to use PyTorch and torchaudio for audio-based Deep Learning projects. \n\nHave fun! \n\n[https://www.youtube.com/watch?v=0Q5KTt2R5w4&amp;list=PL-wATfeyAMNoirN4idjev6aRu8ISZYVWm&amp;index=3](https://www.youtube.com/watch?v=0Q5KTt2R5w4&amp;list=PL-wATfeyAMNoirN4idjev6aRu8ISZYVWm&amp;index=3)",
          "upvote_ratio": 1,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In my new tutorial, you can learn how to make inferences with an already trained PyTorch model.&lt;/p&gt;\n\n&lt;p&gt;This video is part of the “PyTorch for Audio and Music Processing” series, which aims to teach you how to use PyTorch and torchaudio for audio-based Deep Learning projects. &lt;/p&gt;\n\n&lt;p&gt;Have fun! &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=0Q5KTt2R5w4&amp;amp;list=PL-wATfeyAMNoirN4idjev6aRu8ISZYVWm&amp;amp;index=3\"&gt;https://www.youtube.com/watch?v=0Q5KTt2R5w4&amp;amp;list=PL-wATfeyAMNoirN4idjev6aRu8ISZYVWm&amp;amp;index=3&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm4n0a/making_inferences_with_deeplearning_models_in/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Tutorial",
              "e": "text"
            }
          ],
          "link_flair_background_color": "#dadada",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "self",
          "locked": false,
          "likes": null,
          "thumbnail": "self",
          "downs": 0,
          "created": 1622141020,
          "author": "diabulusInMusica",
          "treatment_tags": [],
          "link_flair_text_color": "dark",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm4n0a",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/U_HVfyM8mL4rkKTo3cX1jmnsaGF3jQjGTfvv0lpo86U.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=5db75d4aada7b20a2a62910421d445252d243f94",
                    "height": 81
                  },
                  {
                    "width": 216,
                    "url": "https://external-preview.redd.it/U_HVfyM8mL4rkKTo3cX1jmnsaGF3jQjGTfvv0lpo86U.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d6610c9d4c87c7f2f505b8137832c65e835ec9cd",
                    "height": 162
                  },
                  {
                    "width": 320,
                    "url": "https://external-preview.redd.it/U_HVfyM8mL4rkKTo3cX1jmnsaGF3jQjGTfvv0lpo86U.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d12e692d8bdbab05b98c53f161207f2ec9bed4be",
                    "height": 240
                  }
                ],
                "source": {
                  "width": 480,
                  "url": "https://external-preview.redd.it/U_HVfyM8mL4rkKTo3cX1jmnsaGF3jQjGTfvv0lpo86U.jpg?auto=webp&amp;s=91a86c3a20a934d488cd38f640a457e97f708b3e",
                  "height": 360
                },
                "variants": {},
                "id": "bL1FRn2Ma8SDGi3fne0jfk-xMUWt1oe0iTZq-BLpyHU"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "Making inferences with DeepLearning models in Pytorch [PyTorch for Audio tutorial series]",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": null,
          "secure_media_embed": {},
          "link_flair_text": "Tutorial",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": null,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": false,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 10,
          "num_comments": 0,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm3tmf",
          "created_utc": 1622108666,
          "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 10,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm3tmf/i_made_a_script_that_creates_a_bar_chart_by/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_60skj5rg",
          "link_flair_css_class": "intermediate-showcase",
          "selftext": "Out of personal curiosity on which year I got the most/least games from, I used requests and bs4 to scrap the release year data from the games in the library of a given steam profile link and used matplotlib to create a bar chart from it in this script. Currently for profiles with over 500 games it is unable to get all the data as steam blocks access as part of their DDos protection I presume but otherwise it works fine. It would be great if you could provide feedback on how I can improve it further and get over the limitation too.\n\n  \nProject link: [https://github.com/JaberHaisan/steam-library-year-visualizer](https://github.com/JaberHaisan/steam-library-year-visualizer)  \n\n[This is the result for my steam profile](https://preview.redd.it/m8bddvqfum171.png?width=640&amp;format=png&amp;auto=webp&amp;s=4a31f98e92a6f9072be53004860427672fb74610)",
          "upvote_ratio": 0.92,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Out of personal curiosity on which year I got the most/least games from, I used requests and bs4 to scrap the release year data from the games in the library of a given steam profile link and used matplotlib to create a bar chart from it in this script. Currently for profiles with over 500 games it is unable to get all the data as steam blocks access as part of their DDos protection I presume but otherwise it works fine. It would be great if you could provide feedback on how I can improve it further and get over the limitation too.&lt;/p&gt;\n\n&lt;p&gt;Project link: &lt;a href=\"https://github.com/JaberHaisan/steam-library-year-visualizer\"&gt;https://github.com/JaberHaisan/steam-library-year-visualizer&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/m8bddvqfum171.png?width=640&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4a31f98e92a6f9072be53004860427672fb74610\"&gt;This is the result for my steam profile&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm3tmf/i_made_a_script_that_creates_a_bar_chart_by/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Intermediate Showcase",
              "e": "text"
            }
          ],
          "link_flair_background_color": "#ea0027",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "media_metadata": {
            "m8bddvqfum171": {
              "p": [
                {
                  "u": "https://preview.redd.it/m8bddvqfum171.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=73824a234331361885af2ea0fd830536d4b6af72",
                  "x": 108,
                  "y": 81
                },
                {
                  "u": "https://preview.redd.it/m8bddvqfum171.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=9d0c770b1d26ca7f480aa0c7689925489f6adf2b",
                  "x": 216,
                  "y": 162
                },
                {
                  "u": "https://preview.redd.it/m8bddvqfum171.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=0fade45e93a070bc2a7289a480024b94adf7e76f",
                  "x": 320,
                  "y": 240
                },
                {
                  "u": "https://preview.redd.it/m8bddvqfum171.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=7161a1acc0f97421b261b92e6a9530f64edb229d",
                  "x": 640,
                  "y": 480
                }
              ],
              "s": {
                "u": "https://preview.redd.it/m8bddvqfum171.png?width=640&amp;format=png&amp;auto=webp&amp;s=4a31f98e92a6f9072be53004860427672fb74610",
                "x": 640,
                "y": 480
              },
              "e": "Image",
              "id": "m8bddvqfum171",
              "m": "image/png",
              "status": "valid"
            }
          },
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "self",
          "locked": false,
          "likes": null,
          "thumbnail": "https://b.thumbs.redditmedia.com/vz1qdq_tIHHMIuCEHaAUptTLAouyG3l3pzUblzPKbhY.jpg",
          "downs": 0,
          "created": 1622137466,
          "author": "jaber24",
          "treatment_tags": [],
          "link_flair_text_color": "light",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm3tmf",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/vxMvNU5dPlZfk1biqByS2FqU3XuE1CyzdWl6-BpjeUk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=3ad49fcde12f515d90080da12bf628db3df0ffbe",
                    "height": 54
                  },
                  {
                    "width": 216,
                    "url": "https://external-preview.redd.it/vxMvNU5dPlZfk1biqByS2FqU3XuE1CyzdWl6-BpjeUk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2b4f3f93cc08fd448875841ffcf25021e136dfd8",
                    "height": 108
                  },
                  {
                    "width": 320,
                    "url": "https://external-preview.redd.it/vxMvNU5dPlZfk1biqByS2FqU3XuE1CyzdWl6-BpjeUk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=aaa1d67d8a86b1cfa2e8e5ea9ca13ff3359b46cd",
                    "height": 160
                  },
                  {
                    "width": 640,
                    "url": "https://external-preview.redd.it/vxMvNU5dPlZfk1biqByS2FqU3XuE1CyzdWl6-BpjeUk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=820ae0ab1aa32d47ce0fe08886e990cd4576e0b0",
                    "height": 320
                  },
                  {
                    "width": 960,
                    "url": "https://external-preview.redd.it/vxMvNU5dPlZfk1biqByS2FqU3XuE1CyzdWl6-BpjeUk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=b1f9ae148ff2ce30276b5f9066c736e61a8b8584",
                    "height": 480
                  },
                  {
                    "width": 1080,
                    "url": "https://external-preview.redd.it/vxMvNU5dPlZfk1biqByS2FqU3XuE1CyzdWl6-BpjeUk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=fe53b3c8d50380f87cff6962de7ca50654e565d3",
                    "height": 540
                  }
                ],
                "source": {
                  "width": 1200,
                  "url": "https://external-preview.redd.it/vxMvNU5dPlZfk1biqByS2FqU3XuE1CyzdWl6-BpjeUk.jpg?auto=webp&amp;s=4f9b7108a36ae096a7cc2c312392114a63ce92db",
                  "height": 600
                },
                "variants": {},
                "id": "CJ_JjtgNih30tS8tKsBAmauIQPrgrJTfWOnHN-9bSZ4"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "I made a script that creates a Bar Chart by release year from the games in your Steam Profile",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": 140,
          "secure_media_embed": {},
          "link_flair_text": "Intermediate Showcase",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": 70,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      },
      {
        "data": {
          "secure_media": null,
          "saved": false,
          "hide_score": false,
          "total_awards_received": 0,
          "subreddit_id": "t5_2qh0y",
          "score": 7,
          "num_comments": 2,
          "mod_reason_title": null,
          "whitelist_status": "all_ads",
          "removed_by": null,
          "spoiler": false,
          "id": "nm359l",
          "created_utc": 1622105540,
          "link_flair_template_id": "23ba6f68-cfa2-11ea-96b4-0e31bcb4ff77",
          "banned_at_utc": null,
          "discussion_type": null,
          "edited": false,
          "allow_live_comments": false,
          "author_flair_background_color": null,
          "approved_by": null,
          "media_embed": {},
          "top_awarded_type": null,
          "domain": "self.Python",
          "approved_at_utc": null,
          "no_follow": true,
          "ups": 7,
          "author_flair_type": "text",
          "permalink": "/r/Python/comments/nm359l/lowess_curve_fitting_library_for_python/",
          "content_categories": null,
          "wls": 6,
          "author_flair_css_class": null,
          "mod_reports": [],
          "gilded": 0,
          "removal_reason": null,
          "send_replies": true,
          "archived": false,
          "author_flair_text_color": null,
          "can_mod_post": false,
          "is_self": true,
          "author_fullname": "t2_4g6qbb8j",
          "link_flair_css_class": "intermediate-showcase",
          "selftext": "Hi All,\n\nI've just created a new library called `moepy` that provides an `sklearn` compatible LOWESS curve fitter for Python. `moepy` exposes several variants on the traditional LOWESS, including estimation of confidence and prediction intervals, as well as the robustified LOWESS (where outliers are weighted less). Examples of how to use each of these are shown in a [Quick-Start notebook](https://ayrtonb.github.io/Merit-Order-Effect/ug-08-lowess-quick-start/).\n\nI made this as existing LOWESS implementations (namely in `statsmodels` \\- which is a great library!) provide no ability to predict new values that weren't included in the training data. This meant I was previously linearly interpolating between the results they produced. The `moepy` library is also made specifically for LOWESS estimation and provides it through an `sklearn` compatible API, meaning that it works within the broader `sklearn` eco-system for model ensembling and tuning.\n\nThe library can be installed with `pip install moepy` and has very few dependencies. The code below shows a minimalist example for fitting the standard LOWESS model to a noisy sin wave. The full documentation can be [found here](https://ayrtonb.github.io/Merit-Order-Effect/).\n\n    # Imports\n    import numpy as np\n    import matplotlib.pyplot as plt\n    from moepy import lowess\n    \n    # Data generation\n    x = np.linspace(0, 5, num=150)\n    y = np.sin(x) + (np.random.normal(size=len(x)))/10\n    \n    # Model fitting\n    lowess_model = lowess.Lowess()\n    lowess_model.fit(x, y)\n    \n    # Model prediction\n    x_pred = np.linspace(0, 5, 26)\n    y_pred = lowess_model.predict(x_pred)\n    \n    # Plotting\n    plt.plot(x_pred, y_pred, '--', label='LOWESS', color='k', zorder=3)\n    plt.scatter(x, y, label='Noisy Sin Wave', color='C1', s=5, zorder=1)\n    plt.legend(frameon=False)\n\nThe examples below demonstrate some of the different types of LOWESS estimate that the library can generate.  \n\n\n[LOWESS Estimate Examples](https://preview.redd.it/buvimz07nm171.png?width=4089&amp;format=png&amp;auto=webp&amp;s=41499e62446f0701116d57093305e67b9420e970)\n\nIf anyone has any feedback on how to improve the library/docs please post and I'll try to incorporate it.",
          "upvote_ratio": 1,
          "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi All,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve just created a new library called &lt;code&gt;moepy&lt;/code&gt; that provides an &lt;code&gt;sklearn&lt;/code&gt; compatible LOWESS curve fitter for Python. &lt;code&gt;moepy&lt;/code&gt; exposes several variants on the traditional LOWESS, including estimation of confidence and prediction intervals, as well as the robustified LOWESS (where outliers are weighted less). Examples of how to use each of these are shown in a &lt;a href=\"https://ayrtonb.github.io/Merit-Order-Effect/ug-08-lowess-quick-start/\"&gt;Quick-Start notebook&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I made this as existing LOWESS implementations (namely in &lt;code&gt;statsmodels&lt;/code&gt; - which is a great library!) provide no ability to predict new values that weren&amp;#39;t included in the training data. This meant I was previously linearly interpolating between the results they produced. The &lt;code&gt;moepy&lt;/code&gt; library is also made specifically for LOWESS estimation and provides it through an &lt;code&gt;sklearn&lt;/code&gt; compatible API, meaning that it works within the broader &lt;code&gt;sklearn&lt;/code&gt; eco-system for model ensembling and tuning.&lt;/p&gt;\n\n&lt;p&gt;The library can be installed with &lt;code&gt;pip install moepy&lt;/code&gt; and has very few dependencies. The code below shows a minimalist example for fitting the standard LOWESS model to a noisy sin wave. The full documentation can be &lt;a href=\"https://ayrtonb.github.io/Merit-Order-Effect/\"&gt;found here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# Imports\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom moepy import lowess\n\n# Data generation\nx = np.linspace(0, 5, num=150)\ny = np.sin(x) + (np.random.normal(size=len(x)))/10\n\n# Model fitting\nlowess_model = lowess.Lowess()\nlowess_model.fit(x, y)\n\n# Model prediction\nx_pred = np.linspace(0, 5, 26)\ny_pred = lowess_model.predict(x_pred)\n\n# Plotting\nplt.plot(x_pred, y_pred, &amp;#39;--&amp;#39;, label=&amp;#39;LOWESS&amp;#39;, color=&amp;#39;k&amp;#39;, zorder=3)\nplt.scatter(x, y, label=&amp;#39;Noisy Sin Wave&amp;#39;, color=&amp;#39;C1&amp;#39;, s=5, zorder=1)\nplt.legend(frameon=False)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The examples below demonstrate some of the different types of LOWESS estimate that the library can generate.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://preview.redd.it/buvimz07nm171.png?width=4089&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=41499e62446f0701116d57093305e67b9420e970\"&gt;LOWESS Estimate Examples&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If anyone has any feedback on how to improve the library/docs please post and I&amp;#39;ll try to incorporate it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;",
          "user_reports": [],
          "is_crosspostable": true,
          "clicked": false,
          "author_flair_template_id": null,
          "url": "https://www.reddit.com/r/Python/comments/nm359l/lowess_curve_fitting_library_for_python/",
          "parent_whitelist_status": "all_ads",
          "stickied": false,
          "quarantine": false,
          "view_count": null,
          "link_flair_richtext": [
            {
              "t": "Intermediate Showcase",
              "e": "text"
            }
          ],
          "link_flair_background_color": "#ea0027",
          "author_flair_richtext": [],
          "over_18": false,
          "subreddit": "Python",
          "suggested_sort": null,
          "media_metadata": {
            "buvimz07nm171": {
              "p": [
                {
                  "u": "https://preview.redd.it/buvimz07nm171.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=86c13252d3511e5a79e1cbdf0bf7a966b2a68846",
                  "x": 108,
                  "y": 63
                },
                {
                  "u": "https://preview.redd.it/buvimz07nm171.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=0b4f107f36e4ece8fc599c45a2d17d18f184b39f",
                  "x": 216,
                  "y": 126
                },
                {
                  "u": "https://preview.redd.it/buvimz07nm171.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=fd44b039114a928f4fbd3f77492536a82ebb76c9",
                  "x": 320,
                  "y": 187
                },
                {
                  "u": "https://preview.redd.it/buvimz07nm171.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=6ad3ad412b1f223a1455a79a8947c4e168b460b5",
                  "x": 640,
                  "y": 375
                },
                {
                  "u": "https://preview.redd.it/buvimz07nm171.png?width=960&amp;crop=smart&amp;auto=webp&amp;s=72af6437dda8ca3982e6ec7bf90b7e89d9fe0517",
                  "x": 960,
                  "y": 562
                },
                {
                  "u": "https://preview.redd.it/buvimz07nm171.png?width=1080&amp;crop=smart&amp;auto=webp&amp;s=3aaecca5ed88794e0311cc76edcb7a014d98ba79",
                  "x": 1080,
                  "y": 633
                }
              ],
              "s": {
                "u": "https://preview.redd.it/buvimz07nm171.png?width=4089&amp;format=png&amp;auto=webp&amp;s=41499e62446f0701116d57093305e67b9420e970",
                "x": 4089,
                "y": 2398
              },
              "e": "Image",
              "id": "buvimz07nm171",
              "m": "image/png",
              "status": "valid"
            }
          },
          "can_gild": true,
          "is_robot_indexable": true,
          "author_premium": false,
          "post_hint": "self",
          "locked": false,
          "likes": null,
          "thumbnail": "https://a.thumbs.redditmedia.com/xTVJjv2uiPtb8N0NA8hPXoewmz0NAPYWJDTbW-DSri4.jpg",
          "downs": 0,
          "created": 1622134340,
          "author": "EnergyVis",
          "treatment_tags": [],
          "link_flair_text_color": "light",
          "gildings": {},
          "report_reasons": null,
          "is_video": false,
          "is_original_content": false,
          "subreddit_name_prefixed": "r/Python",
          "mod_reason_by": null,
          "name": "t3_nm359l",
          "awarders": [],
          "media_only": false,
          "preview": {
            "images": [
              {
                "resolutions": [
                  {
                    "width": 108,
                    "url": "https://external-preview.redd.it/oB4G_9c9Wo2qjXmliUS_ONXxAqO6qy8FEjumoNb2EuQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=7fa58ba31389f059ba84703ae1ba8511d451a395",
                    "height": 62
                  },
                  {
                    "width": 216,
                    "url": "https://external-preview.redd.it/oB4G_9c9Wo2qjXmliUS_ONXxAqO6qy8FEjumoNb2EuQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=29dc39d9ea22e118f18a844c94142d887cb4dbdc",
                    "height": 124
                  },
                  {
                    "width": 320,
                    "url": "https://external-preview.redd.it/oB4G_9c9Wo2qjXmliUS_ONXxAqO6qy8FEjumoNb2EuQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=3ba5f5390b3261e78704a811ad7206ed248709ee",
                    "height": 184
                  },
                  {
                    "width": 640,
                    "url": "https://external-preview.redd.it/oB4G_9c9Wo2qjXmliUS_ONXxAqO6qy8FEjumoNb2EuQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=e540be6d57875da8dae747c20dd497c0564b0285",
                    "height": 368
                  },
                  {
                    "width": 960,
                    "url": "https://external-preview.redd.it/oB4G_9c9Wo2qjXmliUS_ONXxAqO6qy8FEjumoNb2EuQ.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=5876caf5410bbec6a50e042f60ac25467efcf800",
                    "height": 552
                  },
                  {
                    "width": 1080,
                    "url": "https://external-preview.redd.it/oB4G_9c9Wo2qjXmliUS_ONXxAqO6qy8FEjumoNb2EuQ.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=a66f7dd8f33520b08951704b4f6e352a7c56dbbf",
                    "height": 621
                  }
                ],
                "source": {
                  "width": 1499,
                  "url": "https://external-preview.redd.it/oB4G_9c9Wo2qjXmliUS_ONXxAqO6qy8FEjumoNb2EuQ.jpg?auto=webp&amp;s=649cc44fd47ca31ebacd0dba8f443e658246730d",
                  "height": 863
                },
                "variants": {},
                "id": "XIw4SScOdSFqCXc2R3QxMmOBrcAHH1S_6aOfUVkSQ-A"
              }
            ],
            "enabled": false
          },
          "num_reports": null,
          "pinned": false,
          "hidden": false,
          "author_patreon_flair": false,
          "mod_note": null,
          "media": null,
          "title": "LOWESS Curve Fitting Library for Python",
          "author_flair_text": null,
          "num_crossposts": 0,
          "thumbnail_width": 140,
          "secure_media_embed": {},
          "link_flair_text": "Intermediate Showcase",
          "subreddit_type": "public",
          "is_meta": false,
          "subreddit_subscribers": 810243,
          "distinguished": null,
          "removed_by_category": null,
          "thumbnail_height": 80,
          "link_flair_type": "richtext",
          "all_awardings": [],
          "visited": false,
          "pwls": 6,
          "category": null,
          "banned_by": null,
          "contest_mode": false,
          "is_reddit_media_domain": false
        },
        "kind": "t3"
      }
    ],
    "before": null,
    "dist": 10,
    "after": "t3_nm359l"
  },
  "kind": "Listing"
}
